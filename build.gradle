buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.altamontana'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.postgresql:postgresql')
	compile(group: 'com.google.code.gson', name: 'gson', version: '2.8.2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
def webappDir = "../alta-montana-web"
//def staticDir = "$projectDir/build/resources/main/static/"
def staticDir = "$projectDir/src/main/resources/static/"

task buildAngular(type:Exec) {
	System.out.println(staticDir)

	workingDir "$webappDir"
	group = BasePlugin.BUILD_GROUP
	if (System.getProperty("os.name").toUpperCase().contains("WINDOWS")){
		commandLine "ng.cmd", "build", "-t", "production", "--output-path", "$staticDir"
	} else {
		commandLine "ng", "build", "-t", "production", "--output-path", "$staticDir"
	}
}